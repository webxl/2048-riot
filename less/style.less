@import "colors";

body {
  font-family: "Helvetica Neue", Arial, sans-serif;
  margin: 0;
}

board {
  border: 1px solid darkgray;
  box-sizing: border-box;
  display: block;
  padding: 10px;
  position: absolute;
  left: 0; right: 0;
  top: 50px; bottom: 0;
}

.row {
  display: flex;
  flex-direction: row;
  height: 25%;
}

block {
  align-items: center;
  background-color: rgba(255, 255, 255, .5);
  display: flex;
  font-size: calc(~"8vw + 6vh");
  font-weight: bold;
  height: 100%;
  text-align: center;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 5;
  transition: background-color 1000ms;

  & > label {
    display: block;
    flex: 1;
  }

  &.level7, &.level8, &.level9 {
    font-size: calc(~"6vw + 4vh");
  }

  &.level10, &.level11, &.level12, &.level13 {
    font-size: calc(~"4vw + 3vh");
  }
}

space {
  background-color: lightgray;
  display: inline-block;
  margin: 10px;
  position: relative;
  width: 25%;

  &.new {
    background: rgba(220, 220, 220, .5);

    block {
      background: rgba(255, 255, 0, .5);
    }
  }
}

block, space {
  border-radius: 8px;
}

@iterations: 15;
.define(@baseVarName, @var) {
  @colorSet: '@{baseVarName}-@{var}';
}


.mixin-loop (@baseVarName, @index) when (@index > 0) {
  .level@{index}{
    .define(@baseVarName, @index - 1);
    background-color:  @@colorSet;
  }

  .mixin-loop(@baseVarName, @index - 1);
}
.mixin-loop (0) {}
.mixin-loop('color', @iterations);






@media screen and (max-width: 768px) {


}









.fade.riot-animate {
  transition:0.5s linear all;
}

.fade.riot-enter,
.fade.riot-leave.riot-leave-active  {
  opacity:0;
}

.fade.riot-enter.riot-enter-active ,
.fade.riot-leave {
  opacity:1;
}